apiVersion: v1
kind: ServiceAccount
metadata:
  name: minikube-ingress-dns
  namespace: kube-system
  labels:
    app: minikube-ingress-dns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: minikube-ingress-dns
  namespace: kube-system
  labels:
    app: minikube-ingress-dns
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - patch
    resourceNames:
      - tcp-services
      - udp-services
  - apiGroups:
      - ""
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: minikube-ingress-dns
  namespace: kube-system
  labels:
    app: minikube-ingress-dns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: minikube-ingress-dns
subjects:
  - kind: ServiceAccount
    name: minikube-ingress-dns
    namespace: kube-system
---
apiVersion: v1
kind: Pod
metadata:
  name: kube-ingress-dns-minikube
  namespace: kube-system
  labels:
    app: minikube-ingress-dns
spec:
  serviceAccountName: minikube-ingress-dns
  hostNetwork: true
  tolerations:
    - operator: Exists
  containers:
    - name: private
      image: cryptexlabs/minikube-ingress-dns:0.3.0
      imagePullPolicy: IfNotPresent
      args:
        - /bin/sh
        - -c
        - |
          sed -E -i "s@/extensions/v1beta1/@/networking.k8s.io/v1/@" /var/app/src/index.js
          exec yarn start
      ports:
        - containerPort: 5353
          protocol: UDP
      env:
        - name: DNS_PORT
          value: "5353"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
    - name: public
      image: cryptexlabs/minikube-ingress-dns:0.3.0
      imagePullPolicy: IfNotPresent
      args:
        - /bin/sh
        - -c
        - |
          sed -E -i "s@(address:.*)POD_IP@\1OUTPUT_IP@;s@/extensions/v1beta1/@/networking.k8s.io/v1/@" /var/app/src/index.js
          exec yarn start
      ports:
        - containerPort: 5354
          protocol: UDP
      env:
        - name: DNS_PORT
          value: "5354"
        - name: OUTPUT_IP
          value: "${PUBLIC_IP}"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
